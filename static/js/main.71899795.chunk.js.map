{"version":3,"sources":["Navbar.js","InputBox.js","Fact.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","style","display","justifyContent","InputBox","_ref","onInput","onNumberSubmit","placeholder","onChange","type","onClick","Fact","factInfo","minWidth","maxWidth","margin","number","text","Footer","flex","target","rel","href","alignSelf","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","setState","input","value","state","unirest","get","concat","header","end","res","output","body","src_Navbar","src_InputBox","src_Fact","src_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.71899795.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navbar = () => {\r\n\treturn(\r\n\t\t<div className='bg-navy white pa2 '>\r\n\t\t\t<h1 className=''>numberTrivia</h1>\r\n\t\t\t<h3 className='green'>type any number and get a random fact about it...</h3>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst style = {\r\n\tdisplay : 'flex',\r\n\tjustifyContent: 'center'\r\n}\r\n\r\nconst InputBox = ({onInput, onNumberSubmit}) => {\r\n\treturn(\r\n\t\t<div style={style} className='mt5'>\r\n\t\t\t<div className='form' >\r\n\t\t        <input placeholder='your number here...' onChange={onInput} className=\" bw2 pa2 input-reset ba bg-transparent hover-bg-black hover-white w-70 center\" type=\"number\" />\r\n\t\t\t\t<button onClick={onNumberSubmit} className=' pointer mt2 pa2 br2 shadow-5 grow '>Give me a fact!</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default InputBox;","import React from 'react';\r\n\r\nconst Fact = ({factInfo}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className='ba br3 b--blue bw1 grow pointer' style={{minWidth: '400px', maxWidth: '700px', margin : '50px auto'}}>\r\n\t\t\t\t<p className='pa2 bg-pink f2'>{factInfo.number}</p>\r\n\t\t\t\t<p className='pa5 bg-black white f4'>{factInfo.text}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Fact;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<div className='footer shadow-4' style={{display: 'flex'}}>\r\n\t\t\t<p style={{flex: '9'}}>Made with React with &hearts; by \r\n\t\t\t\t<a target='_blank' rel=\"noopener noreferrer\"  href=\"https://github.com/aolamide\">Aboyeji Olamide</a>\r\n\t\t\t</p>\r\n\t\t\t<p style={{flex: '1', alignSelf:'center'}}>\r\n\t  \t\t\t<a href='htts://github.com/aolamide'><i className='fab fa-github fa-2x '></i></a>\r\n\t  \t\t\t<a href='htts://wa.me/+2348087723258'><i className='fab fa-whatsapp fa-2x'></i></a>\r\n\t  \t\t\t<a href='htts://twitter.com/olamideaboyeji'><i className='fab fa-twitter fa-2x'></i></a>\r\n  \t\t\t</p>\r\n  \t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport Navbar from './Navbar';\nimport InputBox from './InputBox';\nimport 'tachyons';\nimport Fact from './Fact';\nimport Footer from './Footer';\nimport unirest from 'unirest';\n\nclass App extends Component {\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tinput: '',\n\t\t\toutput : {}\n\t\t}\n\t}\n\tonInput = (e) => {\n\t\tthis.setState({input : e.target.value})\n\t}\n\n\tonNumberSubmit = () => {\n\t\tif(this.state.input){\n\t\t\tunirest.get(`https://numbersapi.p.rapidapi.com/${this.state.input}/trivia?fragment=true&notfound=floor&json=true`)\n\t\t\t\t.header(\"X-RapidAPI-Key\", \"b62b8797dfmsh52097d608dcd3e9p1a6f7fjsnf243e1a0f149\")\n\t\t\t\t.end(res => this.setState({output : res.body}));\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t    \t<div>\n\t\t\t\t<Navbar />\n\t      \t\t<InputBox onNumberSubmit={this.onNumberSubmit} onInput={this.onInput}/>\n\t      \t\t<Fact factInfo={this.state.output} />\n\t      \t\t<Footer />\n\t    \t</div>\n     \n    \t);\n  \t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}